[versions]
# kotlin
kotlin = "2.0.0-RC2"
serialization = "1.6.3"
coroutines = "1.8.0"

# Core
logger = "2.0.13"
ktor = "2.3.10"
ktor-css = "1.0.0-pre.754"
commonmark = "0.18.0"

# Logging
log4j = "2.20.0"

[libraries]
# Core
logger = { module = "org.slf4j:slf4j-api", version.ref = "logger" }

# Kotlin
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "serialization" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# Ktor server
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-negociation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-header = { module = "io.ktor:ktor-server-forwarded-header", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-call-logging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-caching-headers = { module = "io.ktor:ktor-server-caching-headers-jvm", version.ref = "ktor" }
ktor-server-html = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
ktor-server-css = { module = "org.jetbrains.kotlin-wrappers:kotlin-css", version.ref = "ktor-css" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }

# Common
ktor-resources = { module = "io.ktor:ktor-resources", version.ref = "ktor" }

# Ktor client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-negociation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# Commonmark
commonmark = { module = "org.commonmark:commonmark", version.ref = "commonmark" }
commonmark-autolink = { module = "org.commonmark:commonmark-ext-autolink", version.ref = "commonmark" }
commonmark-strikethrough = { module = "org.commonmark:commonmark-ext-gfm-strikethrough", version.ref = "commonmark" }
commonmark-tables = { module = "org.commonmark:commonmark-ext-gfm-tables", version.ref = "commonmark" }
commonmark-list = { module = "org.commonmark:commonmark-ext-task-list-items", version.ref = "commonmark" }

# Logger
logger-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
logger-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }

# build
build-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
build-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

[bundles]
build = [
    "build-kotlin",
    "build-serialization"
]
commonmark = [
    "commonmark",
    "commonmark-autolink",
    "commonmark-strikethrough",
    "commonmark-tables",
    "commonmark-list"
]
ktor-server = [
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-server-netty",
    "ktor-server-cors",
    "ktor-server-resources",
    "ktor-server-negociation",
    "ktor-server-header",
    "ktor-server-call-logging",
    "ktor-server-call-logging-jvm",
    "ktor-server-html",
    "ktor-server-caching-headers",
    "ktor-server-default-headers",
    "ktor-server-css"
]
ktor-client = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-auth",
    "ktor-client-negociation",
    "ktor-client-json",
    "ktor-client-resources",
    "ktor-client-logging",
]
logger = [
    "logger-core",
    "logger-impl"
]
